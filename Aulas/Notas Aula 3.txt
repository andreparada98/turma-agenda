Continuação da aula, seguindo o uso do express com a tela de login

Iremos instalar um novo módulo para armazenar a sessão e salvar as infos para manter a sessão ativa

$ npm i express-session --save

Porém, para pegar a informação do 'corpo' do formulário (e isso se extende por exemplo ao 'body' do postman) - a ideia das informações enviadas por requisições - precisamos usar o body-parser

$ npm i body-parser --save

E o módulo que armazena as informações é o cookie-parser - este já vem com o Express, mas segue abaixo o comando de instalação para caso precisem

$ npm i cookie-parser --save

******************************************************************

No response da action temos uma diferença entre render e redirect:
- render: renderiza/exibe uma tela na tela baseado no caminho da pasta de views. exemplo: home/login, é a pasta 'home' e o arquivo 'login.ejs'
- redirect: redireciona para uma rota que será configurada e essa rota irá compreender uma action, exemplo: 'redirect('/')' -> lê a rota '/' e carrega/compreende a action homec.index

******************************************************************

Nota de ordem de execução do sistema modelo:

A rota é determinada com uma action de controller
A action de controller tem regras pra normalmente um redirect ou um render
O render lê o arquivo de HTML com extensão de .ejs
Quando usado na action de controler um redirect, volta pra rota e a action da rota


******************************************************************

Criando formulário de cadastro de usuário:

- Copiamos o formulário da tela de login
- Alteração da action
- Manteremos o padrão de name dos campos de input
- Criar campo de confirmar senha
- Alterar valor de botão de submit

Criando formulário de cadastro de evento:

- Copiamos o formulário de cadastro de usuário
- Alteração da action
- Alteraremos os campos de 'nome', 'senha' e 'confirmar senha' para 'descricao', 'data', 'preco' - não esquecer de alterar o type dos campos
- Alterar o valor do botão de submit

Após criar as rotas, as actions e os HTMLs das telas de formulário, vamos criar as actions do formulario de post - cadastrarEvento e cadastrarUsuario

******************************************************************

Começando com MongoDB:

- Vamos copiar todas as pastas e arquivos EXCETO a pasta 'node_modules' da pasta 'nodeEventos'
- Vamos criar uma nova pasta '04_mongodb'
- Dentro da nova pasta criaremos 'nodeEventosMongo'
- Os arquivos que foram copiados serão colocados para dentro dela
- Por ultimo, vamos no terminal dentro da pasta 'nodeEventosMongo' e vamos executar o comando: $ npm i (o comando instalará as dependencia da aplicação)
- Para rodar basta executar o comando: $ nodemon app

Para testar se o Mongo foi instalado corretamente, no terminal executaremos o comando:
$ mongo

Caso dê erro, verifique se nas variáveis de ambiente em 'Path' tem o caminho de instalação do do Mongo com a pasta bin - exemplo do meu local de instalação: C:\Program Files\MongoDB\Server\5.0\bin

Caso não tenha, adicione o caminho em 'Path' e feche todas as instâncias de terminal, abra novamente e execute o comando: $ mongo

Outra verificação válida é abrir a opção de 'Serviços' do Windows e verificar se:
1. MongoDB consta na lista de Serviços
2. Se o MongoDB está 'em execução'

Caso MongoDB não apareça na lista, ele não está instalado corretamente no Windows.

- Testando comandos mongo no terminal:

Para ver os bancos de dados existentes:
$ show dbs

Para acessar um banco de dados ou criar um novo banco de dados:
$ use turmaAgenda
- 'turmaAgenda' é o nome do bando de dados

Para criar novos registros:
$ db.usuarios.insert({​​​​​​ nome: "Mariana", email: "mariana@impacta.com", senha: "123456"}​​​​​​)
- declaramos o nome da collection que queremos criar/acessar e usamos o comando de 'insert' com um objeto dentro de parenteses enviando os dados que queremos salvar

Para ver as coleções existentes:
$ show collections

Para listar registros de coleções:
$ db.usuarios.find()

Para listar registros de coleções com dados linha a linha:
$ db.usuarios.find().pretty()

